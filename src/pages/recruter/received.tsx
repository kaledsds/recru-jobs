import { Mailbox } from "lucide-react";
import Head from "next/head";
import React, { useState } from "react";
import { ReceivedRequestRow } from "~/components/recruter/Request";
import { PageHeader } from "~/components/ui";
import RecruterLayout from "~/layouts/recruter-layout";
import { api } from "~/utils/api";

const Received = () => {
  const [statusValue, setStatusValue] = useState<string>("Request Status");
  const [jobValue, setjobValue] = useState<string>("Requesting on");
  const { data: jobs } = api.job.getJobByRecruter.useQuery();
  const { data: JobRequests } = api.jobRequest.getJobRequestByRecruter.useQuery(
    {
      statusValue: statusValue,
      jobValue: jobValue,
    }
  );
  return (
    <>
      <Head>
        <title>Recruter/Sent</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <RecruterLayout>
        <PageHeader title="Received Job Requests" Icon={Mailbox} />
        <div className="w-full overflow-x-visible">
          <table className="table w-full">
            {/* head */}
            <thead>
              <tr>
                <th>Candidate Name</th>
                <th>
                  <select
                    onChange={(e) => setjobValue(e.target.value)}
                    value={jobValue}
                    id="statusValue"
                    className="cursor-pointer bg-base-200"
                  >
                    <option>Requesting on</option>
                    {jobs?.map((job) => (
                      <option key={job.id}>{job.title}</option>
                    ))}
                  </select>
                </th>
                <th>
                  <select
                    onChange={(e) => setStatusValue(e.target.value)}
                    value={statusValue}
                    id="statusValue"
                    className="cursor-pointer bg-base-200"
                  >
                    <option>Request Status</option>
                    <option>pending</option>
                    <option>accepted</option>
                    <option>declined</option>
                  </select>
                </th>
                <th>
                  <span className="px-4">action</span>
                </th>
              </tr>
            </thead>
            <tbody>
              {JobRequests?.jobRequests.map((request) => (
                <ReceivedRequestRow key={request.id} request={request} />
              ))}
            </tbody>
            {/* foot */}
            <tfoot>
              <tr>
                <th></th>
                <th></th>
                <th></th>
                <th></th>
              </tr>
            </tfoot>
          </table>
        </div>
      </RecruterLayout>
    </>
  );
};

export default Received;
