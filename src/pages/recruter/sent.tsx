import { Send } from "lucide-react";
import Head from "next/head";
import React, { useState } from "react";
import { SentRequestRow } from "~/components/recruter/Request";
import { PageHeader } from "~/components/ui";
import RecruterLayout from "~/layouts/recruter-layout";
import { api } from "~/utils/api";

const Sent = () => {
  const [statusValue, setStatusValue] = useState<string>("Request Status");
  const [jobValue, setjobValue] = useState<string>("Job Assigned");
  const { data: jobs } = api.job.getJobByRecruter.useQuery();
  const { data: gigRequests } = api.gigRequest.getRequestByRecruter.useQuery({
    statusValue: statusValue,
    jobValue: jobValue,
  });

  return (
    <>
      <Head>
        <title>Recruter/Sent</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <RecruterLayout>
        <div className="container">
          <PageHeader title="Sent Request" Icon={Send} />
          <div className="w-full overflow-x-visible">
            <table className="table w-full">
              {/* head */}
              <thead>
                <tr>
                  <th>Candidate Name</th>
                  <th>Gig Title</th>
                  <th>
                    <select
                      onChange={(e) => setjobValue(e.target.value)}
                      value={jobValue}
                      id="statusValue"
                      className="cursor-pointer bg-base-200"
                    >
                      <option>Job Assigned</option>
                      {jobs?.map((job) => (
                        <option key={job.id}>{job.title}</option>
                      ))}
                    </select>
                  </th>
                  <th>
                    <select
                      onChange={(e) => setStatusValue(e.target.value)}
                      value={statusValue}
                      id="statusValue"
                      className="cursor-pointer bg-base-200"
                    >
                      <option>Request Status</option>
                      <option>pending</option>
                      <option>accepted</option>
                      <option>declined</option>
                    </select>
                  </th>
                  <th>
                    <span className="flex items-center justify-center ">
                      action
                    </span>
                  </th>
                </tr>
              </thead>
              <tbody>
                {gigRequests?.gigRequests.map((request) => (
                  <SentRequestRow
                    key={request.id}
                    id={request.id}
                    gig={request.gig}
                    job={request.job}
                    status={request.status}
                  />
                ))}
              </tbody>
              {/* foot */}
              <tfoot>
                <tr>
                  <th></th>
                  <th></th>
                  <th></th>
                  <th></th>
                  <th></th>
                </tr>
              </tfoot>
            </table>
          </div>
        </div>
      </RecruterLayout>
    </>
  );
};

export default Sent;
